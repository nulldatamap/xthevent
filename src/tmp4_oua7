extern crate rustc_serialize as serialze;
#[macro_use] extern crate nickel;
extern crate postgres;
extern crate crypto;

use nickel::{Nickel, HttpRouter};
use postgres::{Connection, SslMode};

struct Event { 
  id : i32, 
  tournament : bool,
  title : String,
  date : String,
  time : String,
  unconfirmed_players : Vec<User>,
  confirmed_players : Vec<User>
}

struct User {
  id : i32,
  steam_id : String,
  name : String,
  email : String,
  player_tag : String,
  rank : String
}

static DB_ADDR : &'static str = "postgres://postgres:valiantflamingroostercar@shiftdesign.me/xthtest";

fn setup_database( conn : &mut Connection ) {
  conn.batch_execute( include_str!( "schema.sql" ) ).unwrap();
}

fn insert_user( conn : &mut Connection, user : User ) {
  conn.execute( "insert into User (id, steam_id, name, email, player_tag, rank) values ($1, $2, $3, $4, $5, $6)"
              , &[ user.id, user.steam_id, user.name, user.email, user.player_tag, user.rank ] ).unwrap();
}

fn main() {
  let mut conn = Connection::connect( DB_ADDR, &SslMode::None).unwrap();
  insert_user( &mut conn, U );
  /*let mut server = Nickel::new();
  
  server.get("**", middleware!("Hello World"));
  
  server.listen("127.0.0.1:491");*/
}